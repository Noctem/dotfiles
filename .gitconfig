[user]
	name = David Christenson
	email = mail@noctem.xyz
	signingkey = 7865621F0E10B15D

[core]
	# maximize compression
	compression = 9

	editor = nano
	excludesfile = ~/.globalgitignore

	# Speed up commands involving untracked files such as `git status`
	untrackedCache = true

[alias]
	# abbreviated log
	l = log --pretty=oneline -n 20 --graph --abbrev-commit

	s = status
	d = diff
	cl = clone --recursive
	rb = rebase --interactive --autosquash

	# commit with date of supplied file
	cdate = "!f() { git commit --date \"$(stat -c %y \"$1\")\"; }; f"

	# amend previous commit
	cam = commit --amend

	# commit all changes
	commit-all = !git add -A && git commit -av

	# undo previous commit
	undo = reset --soft HEAD^

	# stash with un-added files
	stash-all = stash save --include-untracked

	# pretty graphical log
	glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'

	# Merge GitHub pull request on top of the current branch or,
	# if a branch name is specified, on top of the specified branch
	mpr = "!f() { \
		declare currentBranch=\"$(git symbolic-ref --short HEAD)\"; \
		declare branch=\"${2:-$currentBranch}\"; \
		if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
			git fetch origin refs/pull/$1/head:pr/$1 && \
			git checkout -B $branch && \
			git rebase $branch pr/$1 && \
			git checkout -B $branch && \
			git merge pr/$1 && \
			git branch -D pr/$1 && \
			git commit --amend -m \"$(git log -1 --pretty=%B)\n\nCloses #$1.\"; \
		fi \
	}; f"

[commit]
	# always sign commits
	gpgsign = true

[mergetool]
	keepBackup = true
	prompt = false

[diff "bin"]
	# Use `hexdump` to diff binary files
	textconv = hexdump -v -C

[difftool]
	prompt = false

[push]
	default = simple

[pull]
	ff = only

[color]
	ui = auto

[rebase]
	autosquash = true
