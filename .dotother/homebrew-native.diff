diff --git a/Library/Homebrew/extend/ENV/shared.rb b/Library/Homebrew/extend/ENV/shared.rb
index 067deee69..a600fc35c 100644
--- a/Library/Homebrew/extend/ENV/shared.rb
+++ b/Library/Homebrew/extend/ENV/shared.rb
@@ -273,7 +273,7 @@ module SharedEnvExtension
     if ARGV.build_bottle? && ARGV.bottle_arch
       ARGV.bottle_arch
     else
-      Hardware.oldest_cpu
+      :native
     end
   end
 
diff --git a/Library/Homebrew/extend/ENV/std.rb b/Library/Homebrew/extend/ENV/std.rb
index 06f4e50d3..38ad3209d 100644
--- a/Library/Homebrew/extend/ENV/std.rb
+++ b/Library/Homebrew/extend/ENV/std.rb
@@ -114,7 +114,7 @@ module Stdenv
     replace_in_cflags(/-Xarch_#{Hardware::CPU.arch_32_bit} (-march=\S*)/, '\1')
     # Clang mistakenly enables AES-NI on plain Nehalem
     map = Hardware::CPU.optimization_flags
-                       .merge(nehalem: "-march=nehalem -Xclang -target-feature -Xclang -aes")
+                       .merge(native: "-march=native -Xclang -target-feature -Xclang -aes")
     set_cpu_cflags map
   end
 
diff --git a/Library/Homebrew/extend/ENV/super.rb b/Library/Homebrew/extend/ENV/super.rb
index 2aa440689..fcbdd1109 100644
--- a/Library/Homebrew/extend/ENV/super.rb
+++ b/Library/Homebrew/extend/ENV/super.rb
@@ -67,6 +67,8 @@ module Superenv
     self["HOMEBREW_DEPENDENCIES"] = determine_dependencies
     self["HOMEBREW_FORMULA_PREFIX"] = formula.prefix unless formula.nil?
 
+    append CC_FLAG_VARS, "-march=native"
+
     # The HOMEBREW_CCCFG ENV variable is used by the ENV/cc tool to control
     # compiler flag stripping. It consists of a string of characters which act
     # as flags. Some of these flags are mutually exclusive.
